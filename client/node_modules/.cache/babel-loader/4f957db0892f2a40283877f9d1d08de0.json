{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\nodejs_projects\\\\NodeJSCA2 (2)\\\\NodeJSCA2\\\\client\\\\src\\\\components\\\\Modify.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class Modify extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const tourismObject = {\n        name: this.state.name,\n        telephone: this.state.telephone,\n        region: this.state.region,\n        location: this.state.location\n      };\n      axios.put(\"\".concat(SERVER_HOST, \"/tourism/\").concat(this.props.match.params.id), tourismObject).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Record updated\");\n            this.setState({\n              redirectToDisplayAttractions: true\n            });\n          }\n        } else {\n          console.log(\"Record not updated\");\n        }\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      telephone: \"\",\n      region: \"\",\n      location: \"\",\n      redirectToDisplayAttractions: false\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n    axios.get(\"\".concat(SERVER_HOST, \"/tourism/\").concat(this.props.match.params.id)).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          this.setState({\n            name: res.data.name,\n            telephone: res.data.telephone,\n            region: res.data.region,\n            location: res.data.location\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.redirectToDisplayAttractions ? React.createElement(Redirect, {\n      to: \"/DisplayAttractions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }) : null, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"telephone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Telephone\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"telephone\",\n      value: this.state.telephone,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"region\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Region\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"region\",\n      value: this.state.region,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Location\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"location\",\n      value: this.state.location,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(LinkInClass, {\n      value: \"Update\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAttractions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\FullStack\\nodejs_projects\\NodeJSCA2 (2)\\NodeJSCA2\\client\\src\\components\\Modify.js"],"names":["React","Component","Form","Redirect","Link","axios","LinkInClass","SERVER_HOST","Modify","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","tourismObject","state","telephone","region","location","put","match","params","id","then","res","data","errorMessage","console","log","redirectToDisplayAttractions","componentDidMount","inputToFocus","focus","get","render","input"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\nexport default class Modify extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: ``,\r\n            telephone: ``,\r\n            region: ``,\r\n            location: ``,\r\n            redirectToDisplayAttractions:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() \r\n    {      \r\n        this.inputToFocus.focus()\r\n  \r\n        axios.get(`${SERVER_HOST}/tourism/${this.props.match.params.id}`)\r\n        .then(res => \r\n        {     \r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else\r\n                { \r\n                    this.setState({\r\n                        name: res.data.name,\r\n                        telephone: res.data.telephone,\r\n                        region: res.data.region,\r\n                        location: res.data.location\r\n                    })\r\n                }\r\n            }\r\n            else\r\n            {\r\n                console.log(`Record not found`)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleChange = (e) => \r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => \r\n    {\r\n        e.preventDefault()\r\n       \r\n        const tourismObject = {\r\n            name: this.state.name,\r\n            telephone:this.state.telephone,\r\n            region: this.state.region,\r\n            location:this.state.location\r\n        }\r\n\r\n        axios.put(`${SERVER_HOST}/tourism/${this.props.match.params.id}`, tourismObject)\r\n        .then(res => \r\n        {             \r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else\r\n                {      \r\n                    console.log(`Record updated`)\r\n                    this.setState({redirectToDisplayAttractions:true})\r\n                }\r\n            }\r\n            else\r\n            {\r\n                console.log(`Record not updated`)\r\n            }\r\n        })\r\n        }\r\n \r\n    render() \r\n    {  \r\n      \r\n        return (\r\n            <div className=\"form-container\">\r\n    \r\n                {this.state.redirectToDisplayAttractions ? <Redirect to=\"/DisplayAttractions\"/> : null}  \r\n                        \r\n                <Form>\r\n                           <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"telephone\">\r\n                        <Form.Label>Telephone</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"telephone\" value={this.state.telephone} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"region\">\r\n                        <Form.Label>Region</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"region\" value={this.state.region} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n        \r\n                    <Form.Group controlId=\"location\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"location\" value={this.state.location} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n  \r\n                    <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \r\n    \r\n                    <Link className=\"red-button\" to={\"/DisplayAttractions\"}>Cancel</Link>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}